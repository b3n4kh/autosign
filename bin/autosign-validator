#!/usr/bin/env ruby
require 'autosign'
require 'logging'

@logger = Logging.logger['autosign_validator_logger']
@logger.level = :debug

# this terrible hack is in place to make it easier to test
if (ENV["AUTOSIGN_TESTMODE"] == "true" and !ENV["AUTOSIGN_TEST_SECRET"].nil? and !ENV["AUTOSIGN_TEST_LOGLEVEL"].nil? )
  config = { 'general' => {
               'loglevel' => ENV["AUTOSIGN_TEST_LOGLEVEL"].to_s
               },
             'jwt_token' =>
               { 'secret' => ENV["AUTOSIGN_TEST_SECRET"].to_s }
           }
else
  config = Autosign::Config.new.settings.to_hash
end

@logger.add_appenders Logging.appenders.stdout

if config['general']['loglevel'].nil?
  @logger.debug "unable to read log level from config file, defaulting to debug"
else
  @logger.level = config['general']['loglevel'].to_s.to_sym
end

unless config['general']['logfile'].nil?
  logfile = config['general']['logfile']
  @logger.debug "logging to logfile: " + logfile
  @logger.add_appenders Logging.appenders.file(logfile)
else
  @logger.debug "no log file specified in config file, logging to console only"
end



unless ARGV.count == 1
  @logger.error "This executable must be called with a certname as the only parameter and with an X509 CSR piped into STDIN"
  exit 1
end

certname = ARGV[0]
@logger.debug "certname is " + certname

@logger.debug "reading CSR from stdin"
csr = OpenSSL::X509::Request.new($stdin.read)
@logger.debug "CSR: " + csr.to_s

key =  csr.attributes.select { |a| a.oid == 'challengePassword' }.first.value.value.first.value
@logger.debug "key: " + key

unless (config['jwt_token']['secret'].is_a?(String) and config['jwt_token']['secret'].length > 0)
  @logger.error "Cannot read JWT secret from config file"
  exit 1
end

secret = config['jwt_token']['secret']
@logger.debug "secret: " + secret

token = Autosign::Token.validate(certname.to_s, key, secret)

if token == true
  @logger.info "token validated successfully"
  exit 0
else
  STDERR.puts "failed to validate token"
  @logger.error "Unable to validate token"
  exit 1
end

exit 1
