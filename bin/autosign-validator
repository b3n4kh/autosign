#!/usr/bin/env ruby
require 'autosign'
require 'logging'

@logger = Logging.logger['Autosign']
@logger.level = :debug
@logger.add_appenders Logging.appenders.stdout

### Get Inputs
unless ARGV.count == 1
  @logger.error "This executable must be called with a certname as the only parameter and with an X509 CSR piped into STDIN"
  exit 1
end

certname = ARGV[0]
@logger.debug "certname is " + certname

@logger.debug "reading CSR from stdin"
csr = Autosign::Decoder.decode_csr($stdin.read)
exit 1 unless csr.is_a?(Hash)

@logger.debug "CSR: " + csr.to_s
### End Inputs

### validate token
token_validation = Autosign::Validator.any_validator(csr[:challenge_password].to_s, certname.to_s)
### end validation

### Exit with correct exit status
if token_validation == true
  @logger.info "token validated successfully"
  exit 0
else
  STDERR.puts "failed to validate token"
  @logger.error "Unable to validate token"
  exit 1
end
### Done exiting

# end with an exit 1 just in case
exit 1
